/*! For license information please see a1248ac2.d6bfc9aa.js.LICENSE.txt */
"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[469],{467:(e,n,t)=>{function a(e,n,t,a,o,r,i){try{var s=e[r](i),c=s.value}catch(e){return void t(e)}s.done?n(c):Promise.resolve(c).then(a,o)}function o(e){return function(){var n=this,t=arguments;return new Promise(function(o,r){var i=e.apply(n,t);function s(e){a(i,o,r,s,c,"next",e)}function c(e){a(i,o,r,s,c,"throw",e)}s(void 0)})}}t.d(n,{A:()=>o})},2444:(e,n,t)=>{function a(e,n,t,o){var r=Object.defineProperty;try{r({},"",{})}catch(e){r=0}a=function(e,n,t,o){function i(n,t){a(e,n,function(e){return this._invoke(n,t,e)})}n?r?r(e,n,{value:t,enumerable:!o,configurable:!o,writable:!o}):e[n]=t:(i("next",0),i("throw",1),i("return",2))},a(e,n,t,o)}function o(){var e,n,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",i=t.toStringTag||"@@toStringTag";function s(t,o,r,i){var s=o&&o.prototype instanceof l?o:l,d=Object.create(s.prototype);return a(d,"_invoke",function(t,a,o){var r,i,s,l=0,d=o||[],u=!1,p={p:0,n:0,v:e,a:h,f:h.bind(e,4),d:function(n,t){return r=n,i=0,s=e,p.n=t,c}};function h(t,a){for(i=t,s=a,n=0;!u&&l&&!o&&n<d.length;n++){var o,r=d[n],h=p.p,g=r[2];t>3?(o=g===a)&&(s=r[(i=r[4])?5:(i=3,3)],r[4]=r[5]=e):r[0]<=h&&((o=t<2&&h<r[1])?(i=0,p.v=a,p.n=r[1]):h<g&&(o=t<3||r[0]>a||a>g)&&(r[4]=t,r[5]=a,p.n=g,i=0))}if(o||t>1)return c;throw u=!0,a}return function(o,d,g){if(l>1)throw TypeError("Generator is already running");for(u&&1===d&&h(d,g),i=d,s=g;(n=i<2?e:s)||!u;){r||(i?i<3?(i>1&&(p.n=-1),h(i,s)):p.n=s:p.v=s);try{if(l=2,r){if(i||(o="next"),n=r[o]){if(!(n=n.call(r,s)))throw TypeError("iterator result is not an object");if(!n.done)return n;s=n.value,i<2&&(i=0)}else 1===i&&(n=r.return)&&n.call(r),i<2&&(s=TypeError("The iterator does not provide a '"+o+"' method"),i=1);r=e}else if((n=(u=p.n<0)?s:t.call(a,p))!==c)break}catch(n){r=e,i=1,s=n}finally{l=1}}return{value:n,done:u}}}(t,r,i),!0),d}var c={};function l(){}function d(){}function u(){}n=Object.getPrototypeOf;var p=[][r]?n(n([][r]())):(a(n={},r,function(){return this}),n),h=u.prototype=l.prototype=Object.create(p);function g(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,u):(e.__proto__=u,a(e,i,"GeneratorFunction")),e.prototype=Object.create(h),e}return d.prototype=u,a(h,"constructor",u),a(u,"constructor",d),d.displayName="GeneratorFunction",a(u,i,"GeneratorFunction"),a(h),a(h,i,"Generator"),a(h,r,function(){return this}),a(h,"toString",function(){return"[object Generator]"}),(o=function(){return{w:s,m:g}})()}t.d(n,{A:()=>o})},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var a=t(6540);const o={},r=a.createContext(o);function i(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(r.Provider,{value:n},e.children)}},9732:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>u,default:()=>m,frontMatter:()=>d,metadata:()=>a,toc:()=>h});const a=JSON.parse('{"id":"agent-native/interactive-examples","title":"Interactive Examples","description":"Experience agent-native architecture in action with these interactive examples. See how AI agents can seamlessly interact with photo management applications through natural language commands and programmatic actions.","source":"@site/docs/agent-native/interactive-examples.md","sourceDirName":"agent-native","slug":"/agent-native/interactive-examples","permalink":"/smugmug-api-reference-app/agent-native/interactive-examples","draft":false,"unlisted":false,"editUrl":"https://github.com/signal-x-studio/smugmug-api-reference-app/tree/main/docs-site/docs/agent-native/interactive-examples.md","tags":[],"version":"current","lastUpdatedBy":null,"lastUpdatedAt":null,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Natural Language API","permalink":"/smugmug-api-reference-app/agent-native/natural-language-api"},"next":{"title":"Implementation Guide","permalink":"/smugmug-api-reference-app/agent-native/implementation-guide"}}');var o=t(4848),r=t(8453),i=t(2444),s=t(467),c=t(6540);const l=function(){var e=(0,c.useState)("natural-language"),n=e[0],t=e[1],a=(0,c.useState)(""),r=a[0],l=a[1],d=(0,c.useState)(""),u=d[0],p=d[1],h=(0,c.useState)("{}"),g=h[0],m=h[1],x=(0,c.useState)(null),f=x[0],v=x[1],w=(0,c.useState)(!1),y=w[0],j=w[1],b=(0,c.useState)([]),A=b[0],P=b[1],S=(0,c.useState)({selectedPhotos:[],currentView:"gallery",totalPhotos:1247,albums:["Vacation 2023","Family Photos","Nature & Landscapes"],filters:{active:!1}}),k=S[0],C=S[1],I={filterPhotos:{name:"Filter Photos",description:"Filter photos by criteria",sampleParams:{keywords:["sunset","vacation"],dateRange:{start:"2023-06-01",end:"2023-08-31"},limit:20}},createAlbum:{name:"Create Album",description:"Create a new photo album",sampleParams:{name:"Summer Memories",description:"Best photos from summer vacation",photos:["photo-1","photo-2","photo-3"]}},searchPhotos:{name:"Search Photos",description:"Search photos with text query",sampleParams:{query:"family dinner holiday",sort:"relevance",limit:15}},updatePhotoMetadata:{name:"Update Photo Metadata",description:"Update photo tags and information",sampleParams:{photoIds:["photo-1","photo-2"],updates:{keywords:["family","celebration"],rating:5}}},batchOrganizePhotos:{name:"Batch Organize Photos",description:"Automatically organize photos in bulk",sampleParams:{method:"byDate",createAlbums:!0,scope:{albums:null}}}},T=function(){var e=(0,s.A)((0,i.A)().m(function e(){var n,t;return(0,i.A)().w(function(e){for(;;)switch(e.p=e.n){case 0:if(r.trim()){e.n=1;break}return e.a(2);case 1:return j(!0),e.p=2,e.n=3,new Promise(function(e){return setTimeout(e,800)});case 3:n={originalQuery:r,understanding:{intent:R(r),entities:N(r),confidence:.85+.1*Math.random(),parameters:O(r)},suggestedActions:B(r),conversationContext:{isFollowUp:A.length>0,referencesPrevious:F(r)}},v(n),P(function(e){return[].concat(e,[{type:"user",content:r,timestamp:new Date,result:n}])}),l(""),setTimeout(function(){var e=E(n);P(function(t){return[].concat(t,[{type:"agent",content:e,timestamp:new Date,actions:n.suggestedActions}])})},1e3),e.n=5;break;case 4:e.p=4,t=e.v,v({error:!0,message:"Failed to process natural language query",details:t.message});case 5:return e.p=5,j(!1),e.f(5);case 6:return e.a(2)}},e,null,[[2,4,5,6]])}));return function(){return e.apply(this,arguments)}}(),z=function(){var e=(0,s.A)((0,i.A)().m(function e(){var n,t,a;return(0,i.A)().w(function(e){for(;;)switch(e.p=e.n){case 0:if(u){e.n=1;break}return e.a(2);case 1:return j(!0),e.p=2,n=JSON.parse(g),e.n=3,new Promise(function(e){return setTimeout(e,500)});case 3:t={actionId:u,parameters:n,success:!0,data:D(u,n),metadata:{executionTime:300*Math.random()+100,timestamp:(new Date).toISOString()}},v(t),M(u,n,t.data),e.n=5;break;case 4:e.p=4,a=e.v,v({error:!0,message:"Invalid JSON parameters or action failed",details:a.message});case 5:return e.p=5,j(!1),e.f(5);case 6:return e.a(2)}},e,null,[[2,4,5,6]])}));return function(){return e.apply(this,arguments)}}(),R=function(e){var n=e.toLowerCase();return n.includes("show")||n.includes("find")?"filterPhotos":n.includes("create")&&n.includes("album")?"createAlbum":n.includes("organize")||n.includes("batch")?"batchOrganizePhotos":n.includes("tag")?"updatePhotoMetadata":(n.includes("search"),"searchPhotos")},N=function(e){var n={dates:[],keywords:[],people:[],locations:[]};return e.includes("sunset")&&n.keywords.push("sunset"),e.includes("vacation")&&n.keywords.push("vacation"),e.includes("family")&&n.keywords.push("family"),e.includes("2023")&&n.dates.push({year:2023}),e.includes("summer")&&n.dates.push({season:"summer"}),n},O=function(e){var n=N(e),t={};switch(R(e)){case"filterPhotos":n.keywords.length>0&&(t.keywords=n.keywords),n.dates.length>0&&(t.dateRange=n.dates[0]),t.limit=20;break;case"createAlbum":var a=e.match(/"([^"]+)"|'([^']+)'/);a&&(t.name=a[1]||a[2])}return t},B=function(e){var n=R(e);return[{actionId:n,description:"Execute "+n+" with extracted parameters",parameters:O(e),confidence:.85}]},F=function(e){return e.toLowerCase().includes("these")||e.toLowerCase().includes("them")||e.toLowerCase().includes("those")},E=function(e){var n=e.understanding,t=n.intent,a=n.confidence;return a>.9?"I understand you want to "+t+". I found the relevant parameters and I'm ready to execute this action.":a>.7?"I think you want to "+t+", but I'm not completely sure. Would you like me to proceed or would you prefer to clarify?":"I'm not sure what you want to do. Could you rephrase your request or be more specific?"},D=function(e,n){var t;switch(e){case"filterPhotos":return{photos:Array.from({length:Math.min(n.limit||10,15)},function(e,t){return{id:"photo-"+(t+1),title:"Filtered Photo "+(t+1),url:"https://picsum.photos/200/150?random="+(t+100),keywords:n.keywords||["sample"]}}),totalFound:47,executionTime:245};case"createAlbum":return{albumId:"album-"+Math.random().toString(36).substr(2,9),name:n.name,photoCount:(null==(t=n.photos)?void 0:t.length)||0,createdAt:(new Date).toISOString()};default:return{message:"Action completed successfully"}}},M=function(e,n,t){if("createAlbum"===e)t.name&&!k.albums.includes(t.name)&&C(function(e){return Object.assign({},e,{albums:[].concat(e.albums,[t.name])})})};return(0,o.jsxs)("div",{style:{border:"1px solid #e1e4e8",borderRadius:"8px",overflow:"hidden",margin:"20px 0",backgroundColor:"white"},children:[(0,o.jsxs)("div",{style:{backgroundColor:"#f6f8fa",padding:"20px",borderBottom:"1px solid #e1e4e8"},children:[(0,o.jsx)("h3",{style:{margin:"0 0 10px 0"},children:"\ud83d\ude80 Agent Interaction Playground"}),(0,o.jsx)("p",{style:{margin:0,color:"#6a737d"},children:"Experience agent-native interactions through natural language commands or direct action calls."})]}),(0,o.jsx)("div",{style:{display:"flex",borderBottom:"1px solid #e1e4e8",backgroundColor:"#fafbfc"},children:[{id:"natural-language",label:"\ud83d\udde3\ufe0f Natural Language",desc:"Chat with AI"},{id:"direct-actions",label:"\u26a1 Direct Actions",desc:"Call functions"},{id:"scenarios",label:"\ud83d\udccb Scenarios",desc:"Try examples"}].map(function(e){return(0,o.jsxs)("button",{onClick:function(){return t(e.id)},style:{flex:1,padding:"15px",border:"none",backgroundColor:n===e.id?"white":"transparent",borderBottom:n===e.id?"2px solid #0366d6":"2px solid transparent",cursor:"pointer",textAlign:"center"},children:[(0,o.jsx)("div",{style:{fontWeight:"bold"},children:e.label}),(0,o.jsx)("div",{style:{fontSize:"12px",color:"#6a737d"},children:e.desc})]},e.id)})}),(0,o.jsxs)("div",{style:{padding:"20px"},children:["natural-language"===n&&(0,o.jsxs)("div",{children:[(0,o.jsx)("h4",{children:"Natural Language Interface"}),(0,o.jsx)("p",{children:"Type natural language commands as you would speak to a voice assistant or AI agent."}),(0,o.jsxs)("div",{style:{marginBottom:"20px"},children:[(0,o.jsx)("textarea",{value:r,onChange:function(e){return l(e.target.value)},placeholder:"Try: 'Show me sunset photos from last summer' or 'Create an album with my best photos'...",style:{width:"100%",height:"80px",padding:"12px",border:"1px solid #d1d5da",borderRadius:"4px",fontSize:"14px",resize:"vertical"}}),(0,o.jsx)("button",{onClick:T,disabled:y||!r.trim(),style:{marginTop:"10px",padding:"10px 20px",backgroundColor:y||!r.trim()?"#6a737d":"#28a745",color:"white",border:"none",borderRadius:"4px",cursor:y||!r.trim()?"not-allowed":"pointer"},children:y?"\ud83d\udd04 Processing...":"\ud83d\ude80 Send to Agent"})]}),A.length>0&&(0,o.jsxs)("div",{style:{marginBottom:"20px"},children:[(0,o.jsx)("h5",{children:"Conversation History"}),(0,o.jsx)("div",{style:{maxHeight:"300px",overflowY:"auto",border:"1px solid #e1e4e8",borderRadius:"4px",padding:"15px"},children:A.map(function(e,n){return(0,o.jsxs)("div",{style:{marginBottom:"15px",padding:"10px",borderRadius:"4px",backgroundColor:"user"===e.type?"#f1f8ff":"#f0fff4",border:"1px solid "+("user"===e.type?"#0366d6":"#28a745")},children:[(0,o.jsxs)("div",{style:{fontWeight:"bold",color:"user"===e.type?"#0366d6":"#28a745",marginBottom:"5px"},children:["user"===e.type?"\ud83d\udc64 You":"\ud83e\udd16 Agent",(0,o.jsx)("span",{style:{float:"right",fontWeight:"normal",fontSize:"12px"},children:e.timestamp.toLocaleTimeString()})]}),(0,o.jsx)("div",{style:{fontSize:"14px"},children:e.content}),e.result&&(0,o.jsxs)("div",{style:{marginTop:"8px",fontSize:"12px",color:"#6a737d"},children:["Confidence: ",(100*e.result.understanding.confidence).toFixed(1),"% \u2022 Intent: ",e.result.understanding.intent]})]},n)})})]})]}),"direct-actions"===n&&(0,o.jsxs)("div",{children:[(0,o.jsx)("h4",{children:"Direct Action Execution"}),(0,o.jsx)("p",{children:"Call agent actions directly with programmatic parameters."}),(0,o.jsxs)("div",{style:{display:"grid",gridTemplateColumns:"1fr 2fr",gap:"20px"},children:[(0,o.jsxs)("div",{children:[(0,o.jsx)("h5",{children:"Available Actions"}),Object.entries(I).map(function(e){var n=e[0],t=e[1];return(0,o.jsxs)("button",{onClick:function(){return function(e){p(e),m(JSON.stringify(I[e].sampleParams,null,2))}(n)},style:{display:"block",width:"100%",padding:"10px",margin:"5px 0",border:u===n?"2px solid #0366d6":"1px solid #d1d5da",borderRadius:"4px",backgroundColor:u===n?"#f1f8ff":"white",cursor:"pointer",textAlign:"left"},children:[(0,o.jsx)("strong",{children:t.name}),(0,o.jsx)("div",{style:{fontSize:"12px",color:"#6a737d"},children:t.description})]},n)})]}),(0,o.jsxs)("div",{children:[(0,o.jsx)("h5",{children:"Action Parameters"}),(0,o.jsx)("textarea",{value:g,onChange:function(e){return m(e.target.value)},placeholder:"Enter JSON parameters...",style:{width:"100%",height:"150px",padding:"10px",fontFamily:"monospace",fontSize:"12px",border:"1px solid #d1d5da",borderRadius:"4px",resize:"vertical"}}),(0,o.jsx)("button",{onClick:z,disabled:y||!u,style:{marginTop:"10px",padding:"10px 20px",backgroundColor:y||!u?"#6a737d":"#0366d6",color:"white",border:"none",borderRadius:"4px",cursor:y||!u?"not-allowed":"pointer"},children:y?"\ud83d\udd04 Executing...":"\u25b6\ufe0f Execute Action"})]})]})]}),"scenarios"===n&&(0,o.jsxs)("div",{children:[(0,o.jsx)("h4",{children:"Interactive Scenarios"}),(0,o.jsx)("p",{children:"Try common agent interaction workflows with pre-built examples."}),(0,o.jsx)("div",{style:{display:"grid",gridTemplateColumns:"repeat(auto-fit, minmax(300px, 1fr))",gap:"15px"},children:[{id:"photo-discovery",name:"\ud83d\udcf8 Photo Discovery",description:"Find specific photos using natural language",initialQuery:"Show me sunset photos from my vacation",expectedFlow:["Filter photos","Display results","Offer refinement options"]},{id:"album-creation",name:"\ud83d\udcc1 Album Creation",description:"Create albums with intelligent organization",initialQuery:'Create an album called "Best of 2023" with my top-rated photos',expectedFlow:["Identify criteria","Filter photos","Create album","Confirm creation"]},{id:"batch-organization",name:"\ud83d\udd04 Batch Organization",description:"Organize large photo collections automatically",initialQuery:"Organize all my unorganized photos by date",expectedFlow:["Analyze photos","Group by criteria","Create albums","Report results"]},{id:"smart-tagging",name:"\ud83c\udff7\ufe0f Smart Tagging",description:"Apply intelligent tags based on photo content",initialQuery:"Tag all my outdoor photos automatically",expectedFlow:["Identify outdoor photos","Analyze content","Apply tags","Show summary"]}].map(function(e){return(0,o.jsxs)("div",{style:{border:"1px solid #e1e4e8",borderRadius:"4px",padding:"15px"},children:[(0,o.jsx)("h5",{style:{margin:"0 0 8px 0"},children:e.name}),(0,o.jsx)("p",{style:{fontSize:"14px",color:"#6a737d",margin:"0 0 10px 0"},children:e.description}),(0,o.jsxs)("div",{style:{backgroundColor:"#f6f8fa",padding:"8px",borderRadius:"4px",fontSize:"12px",fontFamily:"monospace",marginBottom:"10px"},children:['"',e.initialQuery,'"']}),(0,o.jsxs)("div",{style:{marginBottom:"10px"},children:[(0,o.jsx)("strong",{style:{fontSize:"12px"},children:"Expected Flow:"}),(0,o.jsx)("ol",{style:{fontSize:"11px",margin:"5px 0 0 15px",padding:0},children:e.expectedFlow.map(function(e,n){return(0,o.jsx)("li",{children:e},n)})})]}),(0,o.jsx)("button",{onClick:function(){return function(e){l(e.initialQuery),v(null),P([])}(e)},style:{padding:"8px 12px",backgroundColor:"#0366d6",color:"white",border:"none",borderRadius:"4px",fontSize:"12px",cursor:"pointer"},children:"Try This Scenario"})]},e.id)})})]}),f&&(0,o.jsxs)("div",{style:{marginTop:"20px",borderTop:"1px solid #e1e4e8",paddingTop:"20px"},children:[(0,o.jsx)("h4",{children:"Results"}),f.error?(0,o.jsxs)("div",{style:{padding:"15px",backgroundColor:"#ffeef0",border:"1px solid #f87171",borderRadius:"4px",color:"#d73027"},children:[(0,o.jsx)("strong",{children:"Error:"})," ",f.message,f.details&&(0,o.jsx)("div",{style:{marginTop:"8px",fontSize:"12px"},children:f.details})]}):(0,o.jsx)("pre",{style:{backgroundColor:"#f6f8fa",border:"1px solid #e1e4e8",borderRadius:"4px",padding:"15px",fontSize:"12px",overflow:"auto",maxHeight:"400px"},children:JSON.stringify(f,null,2)})]}),(0,o.jsxs)("div",{style:{marginTop:"20px",padding:"15px",backgroundColor:"#f0f6ff",border:"1px solid #0969da",borderRadius:"4px"},children:[(0,o.jsx)("h5",{style:{margin:"0 0 10px 0"},children:"\ud83d\udcf1 Mock App State"}),(0,o.jsxs)("div",{style:{fontSize:"12px",fontFamily:"monospace"},children:["Selected Photos: ",k.selectedPhotos.length," \u2022 Current View: ",k.currentView," \u2022 Total Photos: ",k.totalPhotos," \u2022 Albums: ",k.albums.join(", ")]})]})]})]})},d={},u="Interactive Examples",p={},h=[{value:"Agent Playground",id:"agent-playground",level:2},{value:"Example Scenarios",id:"example-scenarios",level:2},{value:"Scenario 1: Photo Discovery and Organization",id:"scenario-1-photo-discovery-and-organization",level:3},{value:"Scenario 2: Batch Photo Processing",id:"scenario-2-batch-photo-processing",level:3},{value:"Scenario 3: Smart Tagging Workflow",id:"scenario-3-smart-tagging-workflow",level:3},{value:"Real-World Integration Examples",id:"real-world-integration-examples",level:2},{value:"Browser Agent (Gemini-in-Chrome) Integration",id:"browser-agent-gemini-in-chrome-integration",level:3},{value:"Voice Assistant Integration",id:"voice-assistant-integration",level:3},{value:"Workflow Automation",id:"workflow-automation",level:3},{value:"Advanced Interaction Patterns",id:"advanced-interaction-patterns",level:2},{value:"Multi-Turn Conversations",id:"multi-turn-conversations",level:3},{value:"Contextual State Awareness",id:"contextual-state-awareness",level:3},{value:"Error Handling and Recovery",id:"error-handling-and-recovery",level:3},{value:"Performance Monitoring",id:"performance-monitoring",level:2},{value:"Testing Agent Interactions",id:"testing-agent-interactions",level:2},{value:"Unit Testing Agent Actions",id:"unit-testing-agent-actions",level:3},{value:"Integration Testing",id:"integration-testing",level:3},{value:"Best Practices for Agent-Native UX",id:"best-practices-for-agent-native-ux",level:2},{value:"1. Progressive Disclosure",id:"1-progressive-disclosure",level:3},{value:"2. Immediate Feedback",id:"2-immediate-feedback",level:3},{value:"3. Explainable Actions",id:"3-explainable-actions",level:3},{value:"Next Steps",id:"next-steps",level:2}];function g(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"interactive-examples",children:"Interactive Examples"})}),"\n",(0,o.jsx)(n.p,{children:"Experience agent-native architecture in action with these interactive examples. See how AI agents can seamlessly interact with photo management applications through natural language commands and programmatic actions."}),"\n",(0,o.jsx)(n.h2,{id:"agent-playground",children:"Agent Playground"}),"\n",(0,o.jsx)(n.p,{children:"Try out different agent interaction patterns in our interactive playground:"}),"\n","\n",(0,o.jsx)(l,{}),"\n",(0,o.jsx)(n.h2,{id:"example-scenarios",children:"Example Scenarios"}),"\n",(0,o.jsx)(n.h3,{id:"scenario-1-photo-discovery-and-organization",children:"Scenario 1: Photo Discovery and Organization"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Human Goal:"}),' "I want to find my best vacation photos and create an album"']}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Agent Interaction Flow:"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Natural Language Input:"}),' "Show me my best vacation photos from this summer"']}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Intent Classification:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "intent": "filterPhotos",\n  "parameters": {\n    "keywords": ["vacation"],\n    "dateRange": { "start": "2023-06-01", "end": "2023-08-31" },\n    "quality": "high-rating"\n  },\n  "confidence": 0.89\n}\n'})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Action Execution:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:'const photos = await window.agentActions.filterPhotos({\n  keywords: ["vacation"],\n  dateRange: { start: "2023-06-01", end: "2023-08-31" },\n  minRating: 4,\n  limit: 50\n});\n'})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Follow-up Command:"})," \"Create an album with these photos called 'Summer Adventures'\""]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Album Creation:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:'await window.agentActions.createAlbum({\n  name: "Summer Adventures",\n  photos: photos.map(p => p.id),\n  description: "Best photos from summer 2023 vacation"\n});\n'})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"scenario-2-batch-photo-processing",children:"Scenario 2: Batch Photo Processing"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Human Goal:"}),' "Organize my messy photo collection automatically"']}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Agent Interaction Flow:"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Natural Language Input:"}),' "Organize all my unorganized photos by date and remove duplicates"']}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Intent Classification:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "intent": "batchOrganizePhotos", \n  "parameters": {\n    "method": "byDate",\n    "removeDuplicates": true,\n    "scope": "unorganized"\n  },\n  "confidence": 0.76,\n  "requiresConfirmation": true\n}\n'})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Confirmation Dialog:"})," Agent presents summary and asks for confirmation"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Batch Processing:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:'await window.agentActions.batchOrganizePhotos({\n  scope: { albums: null }, // Unorganized photos\n  method: "byDate",\n  createAlbums: true,\n  removeDuplicates: true,\n  onProgress: (progress) => {\n    updateProgress(progress);\n  }\n});\n'})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"scenario-3-smart-tagging-workflow",children:"Scenario 3: Smart Tagging Workflow"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Human Goal:"}),' "Tag all my outdoor photos appropriately"']}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Agent Interaction Flow:"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Natural Language Input:"}),' "Find all outdoor photos and tag them based on what you see"']}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Multi-step Processing:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:'// Step 1: Find outdoor photos\nconst outdoorPhotos = await window.agentActions.searchPhotos({\n  query: "outdoor nature landscape mountain beach",\n  aiClassification: true\n});\n\n// Step 2: Analyze each photo for smart tagging\nfor (const photo of outdoorPhotos) {\n  const analysis = await window.agentActions.analyzePhoto({\n    photoId: photo.id,\n    analysisTypes: ["scene", "objects", "weather", "time-of-day"]\n  });\n\n  // Step 3: Apply intelligent tags\n  await window.agentActions.updatePhotoMetadata({\n    photoId: photo.id,\n    updates: {\n      keywords: [...photo.keywords, ...analysis.suggestedTags],\n      location: analysis.detectedLocation,\n      weatherConditions: analysis.weather\n    }\n  });\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"real-world-integration-examples",children:"Real-World Integration Examples"}),"\n",(0,o.jsx)(n.h3,{id:"browser-agent-gemini-in-chrome-integration",children:"Browser Agent (Gemini-in-Chrome) Integration"}),"\n",(0,o.jsx)(n.p,{children:"Show how browser agents can interact with your photo application:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"// Browser agent observes the page\nconst pageContext = window.agentState.getCurrentContext();\n\n// User says: \"Share the photos I'm looking at with my family\"\nconst visiblePhotos = pageContext.visibleItems\n  .filter(item => item.type === 'photograph');\n\n// Agent executes sharing workflow\nawait window.agentActions.sharePhotos({\n  photoIds: visiblePhotos.map(p => p.id),\n  recipients: ['family-group'],\n  message: 'Check out these photos!',\n  permissions: 'view-only'\n});\n"})}),"\n",(0,o.jsx)(n.h3,{id:"voice-assistant-integration",children:"Voice Assistant Integration"}),"\n",(0,o.jsx)(n.p,{children:"Example of voice-controlled photo management:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"// Voice assistant processes speech-to-text\nconst voiceCommand = \"Hey Assistant, create a slideshow of my dog photos\";\n\n// NLP processing with voice context\nconst intent = await window.nlpProcessor.processQuery(voiceCommand, {\n  inputMode: 'voice',\n  userPreferences: { pets: ['dog'] },\n  confidenceBoost: 0.1 // Account for speech recognition\n});\n\n// Execute slideshow creation\nif (intent.understanding.confidence > 0.8) {\n  await window.agentActions.createSlideshow({\n    criteria: { keywords: ['dog'] },\n    autoStart: true,\n    duration: 300000, // 5 minutes\n    transition: 'fade'\n  });\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"workflow-automation",children:"Workflow Automation"}),"\n",(0,o.jsx)(n.p,{children:"Automated photo management workflows:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"// Define workflow trigger\nwindow.agentActions.registerWorkflow({\n  name: 'dailyPhotoOrganization',\n  trigger: { schedule: 'daily', time: '02:00' },\n  actions: [\n    {\n      action: 'filterPhotos',\n      parameters: { \n        dateRange: { start: 'yesterday' },\n        albums: null // Unorganized\n      }\n    },\n    {\n      action: 'analyzePhotos',\n      parameters: { \n        analysisTypes: ['duplicates', 'quality', 'faces'] \n      }\n    },\n    {\n      action: 'batchProcessPhotos',\n      parameters: {\n        operations: ['generateThumbnails', 'extractMetadata']\n      }\n    },\n    {\n      action: 'suggestAlbums',\n      parameters: { method: 'smartGrouping' }\n    }\n  ],\n  notifications: {\n    onComplete: 'email',\n    onError: 'push'\n  }\n});\n"})}),"\n",(0,o.jsx)(n.h2,{id:"advanced-interaction-patterns",children:"Advanced Interaction Patterns"}),"\n",(0,o.jsx)(n.h3,{id:"multi-turn-conversations",children:"Multi-Turn Conversations"}),"\n",(0,o.jsx)(n.p,{children:"Handle complex conversations that build context over multiple exchanges:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"// Turn 1: Initial request\nconst context1 = await window.nlpProcessor.processQuery(\n  \"Show me photos from my last vacation\",\n  { conversationId: 'conv-123' }\n);\n\n// Turn 2: Refinement\nconst context2 = await window.nlpProcessor.processQuery(\n  \"Just the ones with Sarah in them\",\n  { \n    conversationId: 'conv-123',\n    maintainContext: true,\n    previousResults: context1.results\n  }\n);\n\n// Turn 3: Action\nconst context3 = await window.nlpProcessor.processQuery(\n  \"Create a slideshow with these\",\n  { \n    conversationId: 'conv-123', \n    maintainContext: true,\n    targetPhotos: context2.results\n  }\n);\n"})}),"\n",(0,o.jsx)(n.h3,{id:"contextual-state-awareness",children:"Contextual State Awareness"}),"\n",(0,o.jsx)(n.p,{children:"Agents can understand and work with current application state:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"// Agent observes current page state\nconst currentState = window.agentState.getSnapshot();\n\n// User command: \"Add these to my favorites\"\n// Agent knows \"these\" refers to currently selected photos\nconst selectedPhotos = currentState.photoGallery.selectedItems;\n\nawait window.agentActions.updatePhotoMetadata({\n  photoIds: selectedPhotos.map(p => p.id),\n  updates: { \n    tags: [...existingTags, 'favorite'],\n    rating: Math.max(currentRating, 4)\n  }\n});\n\n// Update UI state for immediate feedback\nwindow.agentState.updatePhotoSelection({\n  action: 'addTag',\n  tag: 'favorite',\n  photoIds: selectedPhotos.map(p => p.id)\n});\n"})}),"\n",(0,o.jsx)(n.h3,{id:"error-handling-and-recovery",children:"Error Handling and Recovery"}),"\n",(0,o.jsx)(n.p,{children:"Graceful handling of ambiguous or failed requests:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:'try {\n  const result = await window.nlpProcessor.processQuery(\n    "Delete the bad photos"\n  );\n  \n  if (result.understanding.confidence < 0.7) {\n    // Low confidence - ask for clarification\n    const clarification = await window.agentActions.requestClarification({\n      originalQuery: "Delete the bad photos",\n      ambiguity: "What criteria define \'bad photos\'?",\n      suggestions: [\n        "Photos with low rating (1-2 stars)?",\n        "Blurry or out-of-focus photos?", \n        "Photos marked for deletion?",\n        "Duplicate photos?"\n      ]\n    });\n    \n    // Process clarified intent\n    const refinedResult = await window.nlpProcessor.processQuery(\n      clarification.userChoice,\n      { \n        conversationId: result.conversationId,\n        originalContext: result.understanding \n      }\n    );\n  }\n} catch (error) {\n  // Fallback to alternative interaction method\n  window.agentActions.showErrorDialog({\n    message: "I couldn\'t understand that request",\n    suggestions: [\n      "Try being more specific about which photos to delete",\n      "Use the manual selection tools instead", \n      "Ask me to help identify photos to delete"\n    ]\n  });\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"performance-monitoring",children:"Performance Monitoring"}),"\n",(0,o.jsx)(n.p,{children:"Track agent interaction performance and optimize user experience:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"// Monitor agent performance\nwindow.agentActions.onActionComplete((action, metrics) => {\n  console.log('Action Performance:', {\n    actionId: action.id,\n    executionTime: metrics.duration,\n    parametersSize: JSON.stringify(action.parameters).length,\n    resultSize: metrics.resultSize,\n    fromCache: metrics.cached,\n    userSatisfaction: metrics.userRating\n  });\n  \n  // Optimize based on performance data\n  if (metrics.duration > 5000) {\n    // Long-running action - suggest caching or batching\n    window.agentActions.suggestOptimization({\n      action: action.id,\n      suggestion: 'caching',\n      reason: 'slow execution time'\n    });\n  }\n});\n\n// A/B test different interaction patterns\nwindow.agentActions.enableExperiment({\n  name: 'nlp-confidence-threshold',\n  variants: {\n    A: { threshold: 0.8 },\n    B: { threshold: 0.7 }\n  },\n  metrics: ['user-satisfaction', 'task-completion-rate']\n});\n"})}),"\n",(0,o.jsx)(n.h2,{id:"testing-agent-interactions",children:"Testing Agent Interactions"}),"\n",(0,o.jsx)(n.h3,{id:"unit-testing-agent-actions",children:"Unit Testing Agent Actions"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"// Test action execution\ndescribe('Agent Actions', () => {\n  test('filterPhotos returns expected results', async () => {\n    const result = await window.agentActions.filterPhotos({\n      keywords: ['sunset'],\n      dateRange: { start: '2023-01-01', end: '2023-12-31' }\n    });\n    \n    expect(result.success).toBe(true);\n    expect(result.data.length).toBeGreaterThan(0);\n    expect(result.data[0]).toHaveProperty('id');\n    expect(result.data[0]).toHaveProperty('keywords');\n  });\n});\n"})}),"\n",(0,o.jsx)(n.h3,{id:"integration-testing",children:"Integration Testing"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"// Test complete agent workflow\ndescribe('Agent Workflows', () => {\n  test('photo organization workflow completes successfully', async () => {\n    // Step 1: Natural language processing\n    const nlpResult = await window.nlpProcessor.processQuery(\n      \"Organize my vacation photos by location\"\n    );\n    \n    expect(nlpResult.understanding.intent).toBe('batchOrganizePhotos');\n    \n    // Step 2: Action execution\n    const actionResult = await window.agentActions[nlpResult.understanding.intent](\n      nlpResult.understanding.parameters\n    );\n    \n    expect(actionResult.success).toBe(true);\n    expect(actionResult.data.albumsCreated).toBeGreaterThan(0);\n    \n    // Step 3: State synchronization\n    const updatedState = window.agentState.getSnapshot();\n    expect(updatedState.albums.length).toBeGreaterThan(0);\n  });\n});\n"})}),"\n",(0,o.jsx)(n.h2,{id:"best-practices-for-agent-native-ux",children:"Best Practices for Agent-Native UX"}),"\n",(0,o.jsx)(n.h3,{id:"1-progressive-disclosure",children:"1. Progressive Disclosure"}),"\n",(0,o.jsx)(n.p,{children:"Start with simple interactions and gradually expose advanced features:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:'// Level 1: Basic commands\n"Show me photos" \u2192 Simple photo filtering\n\n// Level 2: Contextual commands  \n"Show me more like this" \u2192 AI-powered similarity search\n\n// Level 3: Complex workflows\n"Organize my photos like a professional photographer would" \u2192 Advanced AI curation\n'})}),"\n",(0,o.jsx)(n.h3,{id:"2-immediate-feedback",children:"2. Immediate Feedback"}),"\n",(0,o.jsx)(n.p,{children:"Provide instant feedback for agent actions:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"window.agentActions.onActionStart((action) => {\n  showLoadingIndicator({\n    message: `${action.description}...`,\n    estimatedTime: action.estimatedDuration\n  });\n});\n\nwindow.agentActions.onActionProgress((progress) => {\n  updateProgressBar({\n    completed: progress.completed,\n    total: progress.total,\n    currentStep: progress.currentStep\n  });\n});\n"})}),"\n",(0,o.jsx)(n.h3,{id:"3-explainable-actions",children:"3. Explainable Actions"}),"\n",(0,o.jsx)(n.p,{children:"Help users understand what agents are doing:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:'const result = await window.agentActions.smartOrganizePhotos({\n  explanation: true\n});\n\nshowActionExplanation({\n  what: "I organized 1,247 photos into 23 albums",\n  how: "Based on date, location, and people recognition",\n  why: "This makes your photos easier to find and browse",\n  undoAvailable: true\n});\n'})}),"\n",(0,o.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,o.jsx)(n.p,{children:"Ready to implement agent-native features in your application?"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/smugmug-api-reference-app/agent-native/implementation-guide",children:"Implementation Guide"})," - Step-by-step development guide"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/smugmug-api-reference-app/agent-native/action-registry",children:"Action Registry"})," - Available programmatic actions"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/smugmug-api-reference-app/agent-native/natural-language-api",children:"Natural Language API"})," - Process natural language commands"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/smugmug-api-reference-app/agent-native/structured-data",children:"Structured Data"})," - Make your content discoverable to agents"]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(g,{...e})}):g(e)}}}]);